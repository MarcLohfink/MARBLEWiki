{
  "index.html": {
    "href": "index.html",
    "title": "| MARBLE Wiki",
    "keywords": "MARBLE Wiki Redirect to Home."
  },
  "templates/README.html": {
    "href": "templates/README.html",
    "title": "DiscordFX | MARBLE Wiki",
    "keywords": "DiscordFX DocFX template to create documentation similar to Discord Live Demo Installation Download the source or the zipped file from the releases page. In your DocFX project folder, create a new directory named templates, if it doesn't already exist. Copy the discordfx folder from this repository into your templates folder. In your docfx.json configuration file, add templates/discordfx path into build.template property { \"build\": { \"template\": [\"default\", \"templates/discordfx\"] } } Customization Colors You can change any color which are used by the template. They are defined in the styles/colors.css file. To change it, just override the value in your own styles/main.css file for example. Todos [ ] Add documentation versioning Disclaimer Notice of Non-Affiliation and Disclaimer We are not affiliated, associated, authorized, endorsed by, or in any way officially connected with Discord, or any of its subsidiaries, partners or its affiliates. The official Discord website can be found at https://discord.com/. \"Discord\", Discord logos, and other Discord trademarks are trademarks or registered trademarks of Discord or its affiliates in the U.S. and elsewhere."
  },
  "wiki/Authority-&-Rights.html": {
    "href": "wiki/Authority-&-Rights.html",
    "title": "Authority & Rights | MARBLE Wiki",
    "keywords": "Authority & Rights MARBLE is based on an authority and right logic to enable fine-grained access to features and information. Every supported feature has its own level which a user needs to gain access to it. For more information, read Layers of Configuration. The editing of the authorities can be accessed through \"Edit Authority\". The panel displays the current authority rules, which can be changed with the drop-down at \"Current Authority Settings:\" (note: the name can be misleading. Sometimes the Creator calls it \"Authentication\". This is an old remain of a different system). Beneath the general settings, the Creator lists all rules for the different features. They all consist of a display name, a description and a level. The lower the user's level is, the more features can be accessed by him/her (0 = highest access, 99 = lowest access). For example, if one changes the level from the \"Show Normal State\" to 0, all users with a level higher than 0 (1 and above) will not be able to see the normal state in their runtime state menu. There are a few special entries in the list of authority levels. One should not change any entry with the \"[Database]\" tag. Also, the \"Minimum User Level\" is a special setting. The \"Minimum User Level\" is meant to bypass the actual user level. Setting the \"Minimum User Level\" to a low value at design or runtime will give the user access to otherwise hidden features. During runtime, one can quickly give the users access to several features without bothering about important changes. The lowest levels 0 and beneath should never be used for the \"Minimum User Level\". This gives the user the ability to change everything related to levels and also change the root admins level."
  },
  "wiki/Concept-&-Architecture.html": {
    "href": "wiki/Concept-&-Architecture.html",
    "title": "Concept & Architecture | MARBLE Wiki",
    "keywords": "Concept & Architecture In order to use the Creator as it is intended, it is useful to understand the basics about the concept and architecture of the software. Runtime Interactions Configurations & Asset Updates Layers of Configurations The control of the functions and the way they are accessed vary from function to function. Basically, there are two different levels of settings. The first and lowest is the \"Config\" level. The options to be set via the \"Config\" files determine which features can be controlled and used in the session at all. This also includes, for example, which features are displayed in the user's hand menu. Features that are not enabled via the \"Configs\" cannot be controlled by the software at runtime. The second level is the authority level, which should not be confused with the network authority of synchronized objects. The authority level determines for each profile which of the features may be used by the user of the profile. It is essential that the features are also authorized by the \"Config\" level. If the \"Config\" level prohibits a feature, it will not be made available regardless of the authority level. This means that every available feature in a session must be activated in the \"Configs\" in order to be used. If a profile is to use a feature that is activated in the \"Configs\", its authorization level must be adjusted. Asset Bundles and Updates In MARBLE, sessions are represented as \"asset bundles\". These bundles contain all the necessary information and models for a session. They also contain configurations and authorization levels for each individual client. Each session can therefore have its own configurations and authorization levels depending on its area of use. By default, each client requests the current asset bundle from the server and updates all information (e.g. configurations, permission levels, settings, models, etc.) based on these bundles. As a result, each session on each client has the same settings and data. However, it is possible to bypass this behaviour and inject clients with individual configurations and settings. To do this, it is necessary to understand MARBLE's asset update process. When the MARBLE Player is started, it first loads the configuration files onto the respective systems. This is important to avoid unwanted session settings from the asset bundles. After loading these configurations, the update process checks which data should be requested. The \"requestAnchor\", \"requestConfig\" and \"requestAssets\" configs of the \"NetworkConfig\" or \"netconfig.txt\" file determine which contents are to be requested (currently only the asset bundles can be requested). After the data has been requested and hopefully received, the update process checks which of this data should actually be used in the current session. Important for this process are the configs \"updateIp\", \"updateConfigs\" and \"updateAssets\". Irreversible Bypassing To avoid irreversible bypassing, you should never create a session/asset bundle with the \"updateConfigs\" option disabled (set to \"0\"). This will cause the client to never use the asset bundle configurations, which means you will need to manually change this configuration in the machine's locally stored configuration file or connect each client and change this value in the Creator's \"Edit Configs\" menu. Update Configs and Effects In the following table, you can check which behaviour is to expected. Identifier Expected Behaviour requestAnchor Will request the stored spatial anchor from the server. Currently, not implemented. requestConfigs Requests and updates all configuration files regardless of the asset bundle. This allows a session to update data such as models without using the session's saved configurations. Currently, not implemented. requestAssets Requests the asset bundle to be used in the session. This results in a deadlock if the server is not running but the client requests the asset bundles. updateIP Determines whether the IP address of the asset bundle should be used as the server address. The IP address of the server is stored in the Configs. As the server address may change between the different uses of an asset bundle, the stored IP address in a bundle can be outdated. The server address can be changed locally in the \"netconfig.txt\". If this option is not enabled, the client uses its IP address from the local network configuration file. The recommended option is \"disabled\" (\"0\"). updateConfigs Determines whether to use the asset bundle configurations. If this option is disabled, the local configurations of the configuration files are not updated with the asset bundle configurations. This may result in an irreversible bypassing. See Irreversible Bypassing. The recommended option is \"enabled\" (\"1\"). updateAssets Determines whether the assets should be updated with the received asset bundle. Except for the Configs (which are controlled with \"updateConfigs\"), the asset bundle data will overwrite the locally stored data depending on this config. If \"requestAssets\" is disabled but \"updateAsstes\" is enabled, this means that the project will be updated with the first available asset bundle. If no asset bundle is available, the last used project is loaded (not asset bundle(!)). If this project is invalid, the default project is loaded (\"Santa Maria de Melque\"). System Information HoloLens2 Permission The MARBLE Player application requires access to the pictures' library. It stores its application data (e.g. configurations, asset bundles, etc.) in the library to prevent it from being deleted when a new app version is installed. It does not read out any personal information. What's Next? Read further information about MARBLES state Read the Quick Fix & Workarounds"
  },
  "wiki/Concept.html": {
    "href": "wiki/Concept.html",
    "title": "A Mixed Reality Approach to Enhance Archaeological Higher Education | MARBLE Wiki",
    "keywords": "A Mixed Reality Approach to Enhance Archaeological Higher Education The concept behind MARBLE is to offer a Mixed Reality platform for non-tech-savvy teaching stuff and students. In general, the MARBLE-App consists of two parts. One part is the MARBLE Creator, which is implemented as a Unity Editor integration for teachers and serves as a tool for preparing MARBLE sessions. The other part is the MARBLE Player, the presentation tool that runs on the Microsoft's HoloLens2 (HL2) and displays the main model prepared with the Creator. Like the Creator, the Player is also developed with Unity. The overview image shows the main concept and features of MARBLE. As it is known that AR can create cognitive overload on students, which can negatively affect educational effectiveness [1], the development of the MARBLE-App is subject to the paradigms of user-friendliness and the reduction of setup effort to a minimum for a non-tech-savvy target group. The students should be able to dive straight into the course without having to laboriously set up the Player each time. The following picture illustrates the base interaction between the Creator and the Player. The Creator on the top row is for preparing and setting up the following seminar, in which the Creator synchronizes all clients. The Player first requests the current seminar, locates its spatial position, and then displays the seminar's model. If you are further interested in the concept behind MARBLE, read the IEEE ISMAR Paper . Publications & Further Announcements MARBLE was already presented on a couple of conferences & announced in some articles: IEEE ISMAR 2022 First Announcement HFU HFU Blog And the publications from our cooperative partners: Uni Freiburg EPICUR Research Blog What's Next? Read the IEEE ISMAR Paper Watch the videos Get Access Install MARBLE Get Started Sources [1] M. Akçayır and G. Akçayir. Advantages and challenges associated with augmented reality for education: A systematic review of the literature. Educational Research Review, 20:1–11, 2017. doi: 10.1016/j.edurev.2016.11.002"
  },
  "wiki/Configs-And-Effects.html": {
    "href": "wiki/Configs-And-Effects.html",
    "title": "Configs & Effects | MARBLE Wiki",
    "keywords": "Configs & Effects MARBLE stores most of its settings in configuration files. These files are not only necessary for the app itself, but also enable the configuration of functions for sessions, depending on their didactic goal. For example, one can remove all interactions from all clients to turn the MARBLE Player into a simple, one-way presentation tool. In combination with the authentication and authority mechanisms, one can configure a session so that only one or two people (e.g. the professor or tutor) can control the session and the models. If you would like to learn more about this, read Concept & Architecture. Quick Config Edit The \"Quick Config Edit\" panel allows the user to quickly configure certain settings that overwrite the settings from the configuration files when exporting a MARBLE project. The \"Quick Config Edit\" panel is located under \"Edit Configs > Quick Config Edit\". Session Configs In the \"Edit Session Config\" area, the user can configure the session for the MARBLE project. The user can configure features such as menu items or define whether the model can be moved on a specific axis or not. In the \"Selected Config:\" drop-down menu, the user can select which configuration they want to change or delete. The four types of configs available are Boolean, String, Integer or Float. All four configurations to be changed are displayed in the main area of the \"Edit Session Configs\" panel. Configs List Italic configs are currently not implemented. Monospaced should not be changed. Main Config Identifier Expected Behaviour autospawn Leave false - Don´t change keepQRtrack Leave false - Don´t change useLibrary Leave true - Don´t change rotateMX Moved to Feature Config. rotateMY Moved to Feature Config. rotateMZ Moved to Feature Config. translateMX Moved to Feature Config. translateMY Moved to Feature Config. translateMZ Moved to Feature Config. showShadows Leave true - Don´t change autoSceneUnderstanding Leave false - Don´t change autoExpSceneStart Leave false - Don´t change useSceneMesh Leave false - Don´t change visualizeSceneMesh Leave false - Don´t change trackFloor Leave false - Don´t change useSceneObserving Leave false - Don´t change visualizeSceneObserving Leave false - Don´t change autoExecSceneUnderstanding Leave false - Don´t change autoTutorialStart Determines whether the main menu should be skipped. It automatically loads the scene with the index in \"tutSceneIndex. Strings No strings. Integers EntityInteractionMode Moved to Feature Config. expSceneIndex Don´t change - Index of the experience/ showcase scene configMenuIndex Don´t change - Index of the config scene testsMenuIndex Don´t change - Index of the test scene tutSceneIndex Don´t change - Index of the tutorial scene authorityLevel Don´t change startTutIndex Don´t change mainMenuIndex Don´t change - Index of the main menu scene Floats floorTrackInterval Don´t change Feature Config Identifier Expected Behaviour Bools displayStartMessage If a message should be displayed when the app is started. modelTranslateZ If the main showcase model can be moved on the z axis. modelTranslateY If the main showcase model can be moved on the y axis. modelTranslateX If the main showcase model can be moved on the x axis. modelRotationZ If the main showcase model can be rotated around the z axis. modelRotationY If the main showcase model can be rotated around the y axis. modelRotationX If the main showcase model can be rotated around the x axis. allowToolSpawning If the user is allowed to spawn tools. SpatialAwareness If the spatial awareness system is enabled. Don´t change - enabled useDirectAnchoring If the app asks the client on start if the stored spatial anchor should be placed. Use this if you are sure that the user only executes the app in a known location. useBoundingBox Leave false - Don´t change QRCodeTracking Leave true - Don´t change SpatialLocator Leave true - Don´t change SpatialAnchors Leave true - Don´t change WorldOrigin Leave true - Don´t change useCaptureMechanics Leave true - Don´t change useStates Determines whether the user can change MARBLE states. useLightManipulation Determines whether the user can access the light manipulation feature. Strings startMessage The message displayed when \"displayStartMessage\" is enabled. Integers EntityInteractionMode Determines how the user can \"grab\" the main showcase model. 0 = Not at all, 1 = with one hand, 2 = with two hands, 3 = 1 & 2 firstPlacementStrategy Determines with which placement strategy the client starts. 0 = Anchors, 1 = QR Code, 2 = Pointer Floats startMessageDisplayDelay The delay until when the start message from \"startMessage\" is displayed, when \"displayStartMessage\" is enabled. startMessageDuration The duration the start message from \"startMessage\" is displayed, when \"displayStartMessage\" is enabled. Network Config Identifier Expected Behaviour Bools autoConnect Determines whether the client connects automatically to the server. reconnect Determines whether the client reconnects when the connection is lost. If the connection was never established, this config will have no effect. showcaseInterpolateScale Don´t change requestAnchor Will request the stored spatial anchor from the server. Currently, not implemented. requestConfigs Requests and updates all configuration files regardless of the asset bundle. This allows a session to update data such as models without using the session's saved configurations. Currently, not implemented. requestAssets Requests the asset bundle to be used in the session. This results in a deadlock if the server is not running but the client requests the asset bundles. updateIP Determines whether the IP address of the asset bundle should be used as the server address. The IP address of the server is stored in the Configs. As the server address may change between the different uses of an asset bundle, the stored IP address in a bundle can be outdated. The server address can be changed locally in the \"netconfig.txt\". If this option is not enabled, the client uses its IP address from the local network configuration file. The recommended option is \"disabled\" (\"0\"). updateConfigs Determines whether to use the asset bundle configurations. If this option is disabled, the local configurations of the configuration files are not updated with the asset bundle configurations. This may result in a irreversible bypassing. See Irreversible Bypassing. The recommended option is \"enabled\" (\"1\"). updateAssets Determines whether the assets should be updated with the received asset bundle. Except for the Configs (which are controlled with \"updateConfigs\"), the asset bundle data will overwrite the locally stored data depending on this config. If \"requestAssets\" is disabled but \"updateAsstes\" is enabled, this means that the project will be updated with the first available asset bundle. If no asset bundle is available, the last used project is loaded (not asset bundle(!)). If this project is invalid, the default project is loaded (\"Santa Maria de Melque\"). Strings ipv4 IPv4 address of the server. Change this to connect to another server. Integers kcpInterval Leave 1 - Don´t change serverTickRate Leave 60 - Don´t change Floats showcaseSyncInterval Leave 0.007 - Don´t change showcaseLocalPositionSensitivity Leave 0.001 - Don´t change showcaseLocalRotationSensitivity Leave 0.001 - Don´t change showcaseLocalScaleSensitivity Leave 0.001 - Don´t change Pointer Config Identifier Expected Behaviour Bools visualizeWhenNotHitting Determines if the marker is displayed when not, it does not hit an object. visualizeMarker Determines if the marker is visualized at all. Strings No strings. Integers intersectionRotationType Determines how the marker is oriented on the surface of the model. 0 = World up; 1 = Object up; 2 = Towards the caster; 3 = Surface up; 4 = As Cursor. The recommended option is \"4\" (\"As Cursor\"). visualizationMethod Determines how the marker is displayed when it does not hit an object. 0 = Last position; 1 = Fixed distance. The recommended option is \"1\" (\"Fixed distance\"). Floats maxDistance Determines at which distance the marker is displayed when it does not hit an object and \"visualizedMethod\" is set to \"Fixed distance\" (\"1) Study Config Identifier Expected Behaviour Bools adaptUndercut Determines whether the \"userAmountToStart\" should be adapted to the amount of users surpassing the threshold to start the study, e.g. if 6 clients joined but the \"userAmountToStart\" is 2, the \"userAmountToStart\" is also risen to 6. pauseUserCountNotMatch Determines whether the study timer should pause if the user count undercuts the \"userAmountToStart\", e.g. if a user disconnects. useTimer If a timer should be started if the \"userAmountToStart\" value is reached. Strings userAmountToStart How many users are allowed to connect before the study timer starts Integers userAmountToStart How many users are allowed to connect before the study timer starts. Notice: The server counts as one. Floats studyDuration How long the study lasts before the message is displayed. In seconds. endMSgDisplayDuration How long the study message is displayed. In seconds."
  },
  "wiki/Creator-Overview.html": {
    "href": "wiki/Creator-Overview.html",
    "title": "Unity and Creator Overview | MARBLE Wiki",
    "keywords": "Unity and Creator Overview The following image shows Unity and the Creator Plugin. Unity Editor Areas 3D Area --> Shows the current scene. Will display the model when opening \"Edit Showcase Model\". Creator Menu Item --> Menu navigation to open Creator and its features. Scene Graph --> All elements in the scene. Or model components when \"Edit Showcase Model\" is open. Project Graph --> Folders of the Unity Project. Creator --> The actual MARBLE Creator plugin window. Creator Window The Creator Window is separated into: Logo Header --> Just the header and the creator link. Main Toolbar --> Main navigation area. From here you can reach every feature. Work Area --> In this area functions as the main display for all features and settings of the creator. Foldouts --> The two fold-outs are a integrated version of the session control and the info box. Creator Main Menu Toolbar Consists of: Edit MARBLE Project --> Create, Edit and Delete MARBLE Projects. Edit Showcase Model --> Create, Edit, Link and Delete MARBLE Models. Edit Configs --> Edit config files to configure the MARBLE session (see Configs & Effects). Edit Authority --> Edit what user is allowed to do what. Import --> Controls to import model files to unity to use them in a MARBLE Project. User Management --> Controls to create, edit and delete user profiles. It also displays the login area. Currently experimental. Help --> Area for more infos and Info Box controls Back --> Open last Creator window Close --> Close currently opened Creator window Creator Fold-outs The Fold-outs offer the following areas: Session Control: Available Packages --> The exported packages which can be distributed. The selected package will be distributed in the session. Distribution Control --> Displays the distribution server state and gives the controls to start and stop the distribution. Application Control --> Starts MARBLE either in Host-Mode or in Client-Mode. Info Box: Info Box Console --> All infos during the editing in the Creator are displayed here. It filters only the necessary infos for the Creator usage. What's Next? Read about importing models Create a MARBLE Project Create a showcase database for your seminar"
  },
  "wiki/Creator-Usage.html": {
    "href": "wiki/Creator-Usage.html",
    "title": "| MARBLE Wiki",
    "keywords": "789"
  },
  "wiki/Edit-Showcase-Database.html": {
    "href": "wiki/Edit-Showcase-Database.html",
    "title": "Showcase Databases | MARBLE Wiki",
    "keywords": "Showcase Databases A showcase database is a collection of models which can be used in a session/ seminar and are packed into a package when exporting a project. Basically you can add as many models as you want, but be aware that this can cause long export times and also lead to memory exceptions. Navigation Via \"Edit MARBLE Project\" > \"Edit ShowcaseDB\" the model database of the currently selected project can be edited. Add & Remove Models By clicking on \"Add\" models can be added to the database. When added also all \"submodels\" will be added automatically if they aren't already added. Every added model has its own \"menu\" on the right side from which the model can be opened, checked or removed. Removing a model does not automatically remove its submodels. Removing submodels without changing the linkage of the \"main\" model can lead to unpredictable behaviour when the removed submodel is called from the main model. Pitfalls Do not over do it. Do not put every model for every session/ seminar into one database. This is not the intention of the underlying design. Do not add \"pin loops\". Every database needs one start model from which all pins/ details can be accessed. Do not reference this model in another model."
  },
  "wiki/Edit-Showcase-Models.html": {
    "href": "wiki/Edit-Showcase-Models.html",
    "title": "Showcase Models | MARBLE Wiki",
    "keywords": "Showcase Models A showcase model is the data structure wrapped around a model file. The showcase model data structure holds all the necessary data for a displaying and connecting a model during runtime. Navigation The regular way to edit a model is via the menu bar. Go to \"Edit Showcase Model\" and either select \"Create Entity\" or \"Open Entity\" to either create new showcase model or open an already existing one. Create Model To create a model just select \"Edit Showcase Model\" > \"Create Entity\". Enter a name and click \"Create Model\". MARBLE will open an empty model structure for you to configure. Open Model To open a model, just select \"Edit Showcase Model\" > \"Open Entity\". In the following window, chose a model from the dropdown and click \"Open Model\". Edit Model New and Empty Model In the following image, you can see a newly opened and empty model. In the 3D area, you see the reference axis displaying 10cm and 1m. The scene graph has changed too. It displays the data structure of the model (see Model Structure). The work area displays all the necessary information and controls to load and integrate your models. The most important thing to do is add a base model. Add A Base Model The base model is essential. It is always clippable and around the base model wraps the semi-transparent bounding box for model manipulation at runtime. You can only add it once, and then only replace it with another model. Chose an imported model from the dropdown and click \"Add\". In the following image, you can see the added base model. You can also notice that the name in the \"Base Model\" section changed to the name of the model, and the \"Add\" button changed to a \"Replace\" button. You can and should mark the model as point cloud in case it is one (do not select \"IsPointCloud?\" if it is not. This will cause export problems). Side Models Side models give you the possibility to add models which do not belong to the base model. You can add as many side models as you like, but should be aware that they add up to the total poly count. Side models can be configured to be clippable or not. Added side models will appear on the \"Linked Side Models\" section. This feature is experimental and may not work as expected. Adding two equal models as side models and configure one as clippable and the other not can cause unexpected behaviour when deployed to the devices. It is recommended not to over do it with this feature. Transform Models As you can see in the second image of Add A Base Model, the new model is rotated as it was saved by the creator. In order to arrange it to look properly in the clients, you should move, rotate and scale it accordingly. To do this you have to use Unity's translate, rotate and scale tools. On the upper left under the main toolbar you can see three icons for translation, rotation, and scale . To transform a model, you first have to select it either in the scene graph or by clicking the button \"Select\" on the model in the Creator window. Beginners tip: use the axis tool in the upper right corner of the work area to transform the model more easily. Click on the respective axis to see the model from the respective side. Click on \"Persp\" to switch to \"Iso\" which makes it easier to place the model to the origin. By clicking \"Focus\" in the work area of the Creator, you can frame the model. Click it until you completely frame the model. For scaling, orient yourself to the 10cm & 1m auxiliary axes. Model Structure The hierarchy of a \"SpawnableEntity\" is briefly shown and explained below: EditorVisuals_10cm - ignore this container BaseModel - this container contains the main model. It is always clippable and needed in order to export it. There can only be one base model, but you can place several models and containers under a container under the \"BaseModel\" container (like Model/Root/BaseModel/BaseRoot/Model1 and Model/Root/BaseModel/BaseRoot/Model2). SideModels - in this container there can be various models. You can decide which one should be clippable. They do not count to the model itself, which means that they will be transformed according to the base model but not be wrapped around with the manipulation box to manipulate the model! Pins - contains all the \"link\" to more information or models. BaseLOD - deprecated Misc - everything which does not fit into the other containers will be moved to this container."
  },
  "wiki/Further-Notes.html": {
    "href": "wiki/Further-Notes.html",
    "title": "Experimental State and Research Software | MARBLE Wiki",
    "keywords": "Experimental State and Research Software Since MARBLE is a research software, it is not 100% stable and reliable. Many functions may not work directly as expected. Try everything at your pace and take your time."
  },
  "wiki/Getting-Started.html": {
    "href": "wiki/Getting-Started.html",
    "title": "Getting Started | MARBLE Wiki",
    "keywords": "Getting Started First of all make sure that you have installed MARBLE as stated in Install & Setup. Open MARBLE Creator If the Creator panel does not pop up automatically, call it from the top menu. The figure illustrates that you can find the Creator panel under \"MARBLE Creator > Windows > Creator\": As the Creator panel is a simple unity panel, you can dock it as any other panel. See the next figure: Create A Project MARBLE is based on MARBLE Projects. Those are data structures which contain and reference all important data for your session. In order to use MARBLE synchronized on the HoloLense2 devices, you need at least one MARBLE Project which you distribute as package (see Concept & Architecture - AssetBundles And Updates). To create a MARBLE Project, enter a unique name and click \"Create New Project\". For more information, read MARBLE Projects. Fill The Project In order to use your imported models, you have to create a new model database and also reference all the necessary configs and settings. Read MARBLE Projects - Select Configs and Edit Showcase Models. For the sake of this tutorial, reference the \"Selected Tools:\" and the \"Authority Settings:\" with the default references starting with the prefix \"Default\". Export Project After finishing all the steps at MARBLE Projects, you can export the project into a package by pressing the \"Export Project\" button in the work area. When finished, Unity will show you the following prompt indicating that the export has finished. Distribute Project After the project has been successfully exported, it can be selected for distribution in the Session Control window. Select it from the dropdown at \"Package Selection:\" > \"Chose Bundle:\". The name of the bundle is always \"marble_author name_project name_creation date_creation time_build version. For more information, read Concept & Architecture - AssetBundles And Updates. Run Session Make sure that \"Auto Distribution\" is enabled, or the distribution server is started with the right package and that \"Update Assets\" is selected. Then click \"Start MARBLE As Host\". After successfully started the distribution and the session, you should see something like in the following image. Clients are now able to join. Clients Connect Now, clients will download the asset package with your configured session/ seminar. Head over to \"Session\" > \"User Overview\" to see all connected clients. First, there will only be the \"User: admin\". This is the host client on the server which serves as a controlling instance. When a client connects it will appear in the overview. What's Next? Now you are free to investigate the model. Get an overview of the Creator Read about importing models Create a MARBLE Project"
  },
  "wiki/Home.html": {
    "href": "wiki/Home.html",
    "title": "Introducing MARBLE | MARBLE Wiki",
    "keywords": "Introducing MARBLE MARBLE is an interactive multi-user presentation platform for displaying architecture on the HoloLens2. With MARBLE one can create content packages (seminars) and display them on multiple HL2 devices. MARBLE displays the 3D content for everybody at the same position with the same orientation to enable a shared learning experience. Additional MARBLE is packed with \"tools\" to interact with the presented 3D model, like pointers or clipping planes. MARBLE Background MARBLE is a cooperative project between the Albert-Ludwigs-University Freiburg and Furtwangen University. It explores the possibility of enriching archaeological higher education using mixed reality technology. It is based on the idea of offering students the opportunity to perceive and examine excavations and artefacts in three dimensions without having to travel to excavations. Instead of having to continue working with two-dimensional sources such as photographs or videos, MARBLE offers a shared three-dimensional interactive experience for a whole group of students. Interested? What's Next? Read the IEEE ISMAR Paper Watch the videos The MARBLE Concept Get Access Get Started"
  },
  "wiki/Import-Models.html": {
    "href": "wiki/Import-Models.html",
    "title": "Import Models | MARBLE Wiki",
    "keywords": "Import Models The Import panel provides an easy way to import supported models into the Creator and thus into Unity. Navigate to import Navigate to the \"Import\" menu item in the Creator. A window opens where you can import models to use with MARBLE (see below). You will see the following labels and options: Overview Label Content polygon count warning For the best and most stable results, only use models with around 100k polygons supported file extensions At the moment, you can only import .obj models with the importer. All other unity supported files have to be imported manually. add subfolder destination Use this to create a folder in which all the models will be imported to. The models will still be independently imported in their own subfolder. Import Will import the selected .obj either to the default import path or the default import path + subfolder. Import all Will get all .obj files of the selected directory and import them either to the default import path or the default import path + subfolder. Be aware that this can take some time. After successful import, the models can be integrated into the seminars. Subfolders The subfolder text area is a quick way to import models into a specific subfolder, e.g. if you want to group all models under a specific term. Nevertheless, each model gets its own folder, named after its model name, where all related files are stored. If this is not your first time entering a subfolder, you will be prompted to do so. Select \"Do not bug me again!\" to avoid being bothered with the prompt again. Location for advanced users The default import path is \"Assets/Models/_User/Models/*Subfolder*\". Material Editor As each model can organise its structure, materials and textures as desired, the user may need to change the materials of an imported model. For this reason, a \"material editor\" has been implemented. In the material editor, you can select an imported model and extract its materials and automatically assign them by name or order. The material editor is an experimental function. It is recommended to use it only if the normal import does not work and the imported model cannot be modified in a special 3D environment. FAQ Models without Textures Sometimes it can happen that a material or texture is missing when importing a model. This happens when the model file references textures somewhere relative to its file system location. If the model has textures, import them by dragging and dropping them into the Unity asset folder in the project window where the imported model is located. If this does not solve the problem, select the model in the material editor and click on \"Extract Materials\". This will create a folder called \"Materials_generated\" containing all the materials of the imported model. Then try to assign the textures by clicking on \"Map\". If this does not result in the expected visual appearance, open the inspector by clicking on the tab next to the MARBLE Creator panel tab. In the project panel, go through the materials in the \"Materials_generated\" folder and drag the specific textures to the \"Albedo\" entry. What's Next? After the model is imported, it can be used in the \"Edit Showcase Model\" window. Be aware that the importer only copies the models into Unity. Especially .obj models are very error-prone. If a texture does not sit properly on the model, it is advisable to inspect the model first. Create a MARBLE Project Create a showcase database for your seminar Edit your imported model to be used in your seminar"
  },
  "wiki/Install-&-Setup.html": {
    "href": "wiki/Install-&-Setup.html",
    "title": "Install & Setup | MARBLE Wiki",
    "keywords": "Install & Setup MARBLE and the current version are experimental research versions. There is no guarantee that they will properly work and may cause a lot of troubleshooting to get it to work. MARBLE depends on a lot of settings, plugins and third party libraries. The following guide will lead you through the most important installation steps. The core of the MARBLE app is the current package »marble_mordor_1.0.0« which you have to request from the author. If you have access to the unity package, follow this guide (chronologically) to run MARBLE on your machine. Visual Studio To properly deploy new app versions, you need to follow the instructions from: Microsoft Learn - Mixed Reality. Unity Version MARBLE runs on 2020.3.13f1. Make sure to also install the UWP module. Packages The latest version of MARBLE may not require all the following packages. To enable better troubleshooting, they are listed below: Editor Coroutines 1.0.0 OpenXR Plugin 1.3.1 TextMeshPro 3.0.6 Windows XR Plugin 4.5.0 XR Plugin Management 4.2.1 Mixed Reality Toolkit MARBLE was developed with MRTK 2.7.3. Make sure to have the following packages: MRTK Dependencies Mixed Reality Toolkit Examples 2.7.3 Mixed Reality Toolkit Extensions 2.7.3 Mixed Reality Toolkit Foundation 2.7.3 Mixed Reality Toolkit Standard Assets 2.7.3 Mixed Reality Toolkit Tools 2.7.3 Platform Support Mixed Reality OpenXR Plugin 1.3.1 Mixed Reality Scene Understanding 0.6.0 World Locking Tools WLT Samples 1.5.8 WLT Core 1.5.8 MRTK Install You will probably have to set up MRTK after adding the packages. Use the following options: Unity OpenXR plugin (recommended) Next resolve all problems. As the \"Interaction Profile\" select \"Eye Gaze Interaction Profile\" and \"Microsoft Hand Interaction Profile\". Click \"Apply Settings\" and then \"Next\" Make sure everything is selected. Click \"Apply\" and with this restart the editor. Head to Mixed Reality > Toolkit > Utilities > Configure Project for MRTK to reopen the MRTK setup window Import the TMP Essentials Got it, next Done Mirror API MARBLE uses the Mirror-API. It uses the 57.0.0 version. Build Settings The build settings are only mandatory if you want to build new app versions. If you just want to run MARBLE as Creator, skip this part. Head to File > Build Settings Make user that your target platform is \"Universal Windows Platform\". Architecture: ARM64 Build Type: D3D Project Target SDK Version: 10.0.22621.0 Minimum Platform Version: 10.0.10240.0 Scene The main scene of MARBLE is the \"HoloLens2Setup\" scene. Make sure that this scene is the first scene executed (File > Build Settings > Scenes in Build). You need at least the following three scenes at their indices: Scenes/Setup at 1, Scenes/ShowcaseRoom/ShowcaseRoom at 3 and Scenes/ShowcaseRoom/MainMenu_NoUpdater at 8. Tags & Layers As Unity does not export tags and layers, you have to add the following order of tags and layers. Therefore, head to Edit > Project Settings > Tags and Layers. Tags: DirectionalLight DirectionalLightReceiver Layers: Default TransparentFX Ignore Raycast leave it empty Water UI Model MainDirectionalLight WorldUI MsgTool EventBox CaputreArea DraggableBox PopupPin ModelNoTouch IgnoreLayering Skip the next until User Layer 31 > Spatial Awareness What's Next? Get an overview of the MARBLE Creator Get Started Read the Quick Fix & Workarounds"
  },
  "wiki/MARBLE-Projects.html": {
    "href": "wiki/MARBLE-Projects.html",
    "title": "MARBLE Projects | MARBLE Wiki",
    "keywords": "MARBLE Projects The heart of a MARBLE session (or seminar/ lecture) are the MARBLE projects. In a MARBLE project, all necessary information is gathered and can be exported as _AssetBundle_. MARBLE Project Content A MARBLE Project consists of the following components: Component Description Author Name Name of the author. Project Name Name of the project. Be aware that changing this name also changes the project's file name. Selected Models All shown models for the project/ session are managed in a database. Add a specific model database to the project to be able to show its models during a session. Selected Tools All usable tools in the project/ session are managed in a database. Add a specific tool database to the project to be able to use its tools during a session. Authority Settings Add a database for all the authority settings which are used to determine what the user is allowed to do. Config Files Configuration files can be used to configure different areas of the application depending on the use case of the session. Main Config - General settings, e.g. whether to skip the main menu. Network Config - Network-related settings like ip-adress of the server or asset update parameters. Menu Config - Which features should be shown in the main and hand menus. Feature Config - Which features should be enabled during the session. Pointer Config - How pointers are presented during the session, e.g. whether they are enabled from the beginning of the session for everyone. | Be aware that changing settings can cause unpredictable behaviour or even cause an application to stop launching. Navigate to MARBLE Projects Navigate to the menu item \"Edit MARBLE Projects\" to manage your projects (see below). Here, you can either create or edit a project. Create a new project To create a new project, enter a project name in the project name field and click on the \"Create new Project\" button (see figure). Open an existing project To open an existing project, just click on the \"Select Project\" button (see figure) and select a project from the pop-up. Open projects do not have any references. The Creator will indicate which references are missing by displaying a little warning sign () next to it. It is also recommended to change the author name. Project Meta You can change the project meta in the work area. While changing the author has no significant effect, changing the project name causes the file in which the project is stored to be renamed as well. Databases In the section \"Databases\" you are able to link model and tool databases with all the models and tools you want to use in the session. You can reference databases with the prefix \"Default\" but you should not edit them. You should never reference databases with the prefix \"Runtime\"! Showcase Model DB The showcase model db contains all models which can be displayed in one session. Either create a new database by clicking \"Create DB\" or reference a already existing one. You can use a database in as many project as you want. Editing an existing database will also change it for all other projects in which it is referenced. In the following image, the model's database name is changed. After clicking \"Create DB\" a new Showcase-Model-DB will be created with the respective name. Even there is no restriction in the amount of models in a database, I recommend not to over do it. Tool DB A tool db contains all tools which can be spawned in the scene next to the main showcase model. As this is still work in progress and there is no good tool editor, you should rely on the existing tool db with the prefix \"Default\". Select Authority Settings Authrority Settings are an abstract concept for giving clients the possibility to interact with the features of MARBLE. For more information, see Concept & Architecture - Layers of Configurations. To create a new authority settings database, you should first select a database from which you want to create your new one. It is highly recommended not to add or remove existing authority levels! You can reference databases with the prefix \"Default\" but you should not edit them. You should never reference databases with the prefix \"Runtime\"! Select Configs In order to export a project, you have to assign config files. By default, you can enter a name and click on \"Create\" to create a new config file which will hold its own settings. You can also assign an existing config file. In the figure below, the Main Config file was created with the unique name \"TestingMainConfig\". For the Network Config, the default config file was assigned. The Feature, Menu, and Pointer Configs are neither assigned nor created. After having created or assigned a config file, the editing of those files is available by clicking on \"Edit\" on the right side of each config. The button \"Copy\" will create a deep copy of the current assigned config file. If you are unsure what to assign or how to configure the files, just assign the default files and copy them by pressing the \"Copy\"-button on the right. From there on, you can change the settings of the file. Be aware that you assign the correct files to the correct fields. For example, assigning a main config file to the menu config reference field can lead to unpredictable behaviour. You can reference databases with the prefix \"Default\" but you should not edit them. You should never reference databases with the prefix \"Runtime\"! Paths While not recommended, you can change the paths where the project should be exported to. Fold-out the \"Show Paths\" and enter an absolute path you want the export to be saved at. The path which is displayed is the absolute path to the assets in the unity folder. What's Next? Create a showcase database to reference it in your project Edit your showcase models Edit a Config Export the project"
  },
  "wiki/Pins-&-Details.html": {
    "href": "wiki/Pins-&-Details.html",
    "title": "Pins, Details & Connections | MARBLE Wiki",
    "keywords": "Pins, Details & Connections With \"pins\", one can add relevant information to a model or connect another model to be accessed from this model. With pins, the Creator offers the possibility to design an overview-focus kind of hierarchy where one model serves as low resolution overview for navigation and several high resolution detail models as actual learning material. This is shown in this video . Pins are part of a model and only accessible through \"Edit Showcase Model > Select Model > Open Entity > Edit Pins\". Create Pins Simply create a pin by clicking on the \"Create New Pin\" button at the \"Edit Pins\" panel of an opened model. By doing so, the Creator spawns a 3D pin in the model itself, seen on the left side of the image below. The Creator also alows the user to modify the pins metadata. Pin Placement To properly place a pin in the model, one can either use the experimental scaling and translation dropdowns beneath the metadata in the \"Edit Pin\" section or use Unitys scene view. In the scene view, one can place a pin the same way a model is placed. Connect other Models Pins can also contain a connection or reference to another model which, by this, can be accessed through the original model. To connect a model, simply navigate to the button \"Connect Model\" in the \"Connect another Model\" section. The Creator changes its appearance. The metadata is now taken from the pin itself and can not be changed directly. Furthermore, a drop-down appears at which one can choose a model which should be accessed through the pin. It is mandatory to save the selected connection by pressing the \"Save\" button next to the drop-down. The button \"Go to\" will load the connected model to work on it. The toggle \"Show Info\" determines if a pin with a connection should show the name and description of the connected model when a user tabs on the pin at runtime. If toggled off, the MARBLE Player will immediately open the connected model rather than showing its information first when the user tabs the pin at runtime. FAQ Description of Pin will not apply If you enter something into the \"Model Description\" area, and it disappears when pressing \"Save Description\", close the Creator (right-click on the \"MARBLE Creator\" tab and select \"Close Tab\") let unity run once and then reopen the Creator (MARBLE Creator > Windows > Creator). Empty Pin Descriptions at Runtime If your description of a connected model will not appear at runtime (see image below), consider to open the root model in which the model is connected and update its pins. Navigate to \"Edit Showcase Model > Open Entity > Edit Pins\" and click \"Update Prefab\". To make sure that the description is set correctly, select the GameObject of the pin in the \"Hierarchy\" panel and check the \"Infotext\" entry at the \"Popup Data_Module (Script)\" component: Do not change this entry directly. This can cause the loss of data. Rather restart unity. What's Next? Watch the related video"
  },
  "wiki/Quick-Fix-&-Workarounds.html": {
    "href": "wiki/Quick-Fix-&-Workarounds.html",
    "title": "Quick Fixes | MARBLE Wiki",
    "keywords": "Quick Fixes Creator Environment Back Button does not react It might occur that you hit the \"Back\" button but nothing happens. The cause is often Unity's behaviour when exporting or building packages or apps. The static Creator loses the window instance and can not execute commands on it. close the Creator Window (right click on the tab and click \"close tab\"). if step 1. does not work, restart Unity. Import Models Without Textures See Import Models > Models Without Textures. Pins Metadata Will Not Be Applied See Import Models > Description of Pin will not apply . Empty Pin Descriptions at Runtime See Import Models > Empty Pin Descriptions at Runtime . Player Environment Non-Executing Menus It can happen that you press something in a holographic menu but nothing happens. This often happens if the connection gets messed up. Make sure that the connection is established and reopen the affected menu. Configurations Malfunction at first start If the app does not apply any configs on the first start, the app might not have initialized its configuration data correctly. MARBLE uses some space in the picture library to store data like configs. On the first start, it might happen that it does not get access to write all the data to disk before starting the experience. Steps to fix: Mordor Version (Build: newer than 1.0.272.0) make sure that: the directory structure is created correctly --> on the device manager, head to \"File Explorer > User Folders > Pictures\". There has to be the following path: MARBLE > Data > Configs. there are seven config files (config, debugconfig, featureConfig, menuConfig, netconfig, pointerconfig, studyconfig). these config files are not empty (0 bytes). If one of those issues occur do the following: create the folders stated in step 1. upload all files manually. Therefore, chose the \"Upload\" button, head to the Unity project folder \"Assets/_MARBLECreator/Data/Configs\" and upload the configs one by one. make sure that the uploaded configs have the right names (config, debugconfig, featureConfig, menuConfig, netconfig, pointerconfig, studyconfig). restart the MARBLE app. Focusgroup Version (Build: 1.0.272.0) make sure that: the directory structure is created correctly --> on the device manager, head to \"File Explorer > User Folders > Pictures\". There has to be the following folder: MARBLE. there are five config files (config, debugconfig, featureConfig, menuConfig, netconfig). these config files are not empty (0 bytes). If one of those issues occur do the following: create the folder stated in step 1. upload all files manually. Therefore, chose the \"Upload\" button, head to the Unity project folder \"Assets/_MARBLECreator/Data/Configs\" and upload the configs one by one. make sure that the uploaded configs have the right names (config, debugconfig, featureConfig, menuConfig, netconfig, pointerconfig, studyconfig). do not upload newer versions of the files. Stick to the files that are not newer than those for build version 1.0.272.0) restart the MARBLE app."
  },
  "wiki/Runtime-Control.html": {
    "href": "wiki/Runtime-Control.html",
    "title": "Runtime Control | MARBLE Wiki",
    "keywords": "Runtime Control During runtime one can control the most features at the server instance. The Creator will change its menu when running a session as seen in the image above. Session Management The session management panel gives one a quick overview of the current connection and showcase state. Under \"Session > User Overview\" one can find all connected clients, quick review their data and change their interaction state, authority level and color. This panel also gives the possibility to change the interaction state of all users at once. Under \"Session > Showcase\" once can control the displayed showcase. The fold-out \"Spawnables\" displays a list of all models of the session. \"IsDetail\" indicates whether the model is accessed from another model or not. Simple click on \"Show this\" next to a model to display it on the clients. One can also use the \"Previous\" and \"Next\" controls to switch between models. State Management The state management displays all users and their interaction state. Pointer Overview In the \"Pointer Overview\" panel one can manage the synchronized pointers and their visibility. Every change has to be applied by clicking either \"Apply Pointer Changes\" or \"Apply Marker Changes\". In the following each setting is explained. Identifier Description Pointer Settings Visualize Marker Determines if the pointers should be displayed or not. Visualize when hitting Determines if the pointers should be visualized even when they do not hit the model. State When \"Visualize when hitting\" is enabled one can choose between \"LastPosition\" or \"FixedDistance\" to determine how the pointer marker will be displayed when not hitting the model. Max Distance When \"FixedDistance\" is selected \"Max Distance\" determines how far the pointer marker will be displayed. Intersection Rotation How the marker is displayed on the model. \"AsCursor\" is recommended as this orientates the marker like the not synced MRTK cursor. Marker Settings: Marker Name of the marker the following settings belong to. Pointer Name The name the marker belongs to. Probably either left or right hand. Current Marker Color The colour of the marker. The colour can be independently changed for every marker (left or right hand). The colour will be reset when the marker disapears once. To change the colour persistently, change the profile colour of the user. Current Visualize Marker If the marker should be visualized. In case \"Visualize Marker\" of the \"Pointer Settings\" section is disabled, the settings of \"Current Visualize Marker\" will be overwritten. The bug that some changes under \"Marker Settings\" are not applied is known. The current fix is simply to make the change again. User Levels The \"User Levels\" panel is a runtime version of the Authority & Rights panel. At the top one can change the authority settings for all users at once. User Text Overlays At this panel one can display small messages on the clients. The messages can be displayed at one or all connected clients. It is also possible to enter a duration the text should be displayed before it disapears automatically. Config Session The \"Config Session\" panel is a runtime version of the Session Configs panel. Under \"Config Session > General Config\" the configs for all connected clients can be edited. \"Config Session > Client Configs\" enables a editing of the configs per client."
  },
  "wiki/Tool-Databases.html": {
    "href": "wiki/Tool-Databases.html",
    "title": "Tool Databases | MARBLE Wiki",
    "keywords": "Tool Databases A tool database is a list holding all tools which should be available during a session. Basically you can add as many tools as you want, but be aware that this can cause long export times and also lead to memory exceptions. Navigation Via \"Edit MARBLE Project\" > \"Edit ToolDB\" the model database of the currently selected project can be edited. Add & Remove Tools Currently, adding tools is implemented, but not supported in a user-friendly manner. In order to add a new tool, you have to create a new tool by deriving a new prefab from the \"TB_Tool_grabbable_network\" and one from \"TB_Tool_grabbable\". In prefab mode, you have to add the desired model and functionality to both prefabs! After this process, you can add a new tool to the tool database and reference the derived \"TB_Tool_grabbable\" in the \"Offline Tool\" field and the derived \"TB_Tool_grabbable_network\" in the \"Online Tool\" field. Further, you have to find the \"MARBLE_NetworkManager\" in the project panel, which controls the network session at runtime. Add the online representative of the new tool to the \"Registered Spawnable Prefabs\" list. Finally, add the position of the new tool in the \"Registered Spawnable Prefabs\" list (starting at 0) to the newly added tool in the tool database under \"Net Manager Id\"."
  },
  "wiki/User-Management.html": {
    "href": "wiki/User-Management.html",
    "title": "User Management | MARBLE Wiki",
    "keywords": "User Management MARBLE implements a really simple user management. The core features are creating and accessing user profiles (like accounts) to store information like name, main color and authority levels/ rights. Profile System The profile system is in an experimental state. It is only meant to offer the possibility to assign features and visibilities to clients at runtime. For example, you can create a tutor account in which the tutor can log in at runtime to be able to move the model without having the need to also give this access to all other students. Nonetheless, MARBLE can be run without any additional profiles as already created. Every client which connect will get a temporary profile while being part of the experience. After they disconnect, the server deletes their data. There are two profiles which should not be touched by any means. The first one is the admin profile, which is the root profile of the server. No other profile should have a lower or the same level as the admin. The second is the default \"Student\" profile. This profile serves as a blueprint for all temporary connected clients without own profile. Create Profile One can create a profile in the \"Profile Creation\" fold-out section. Enter name, password, level and color and click \"Create Profile\". User Profiles The \"User Profiles\" fold-out section displays all profiles added to the server. There you can change the profile names, color and level. Most Important Information PLEASE(!) never ever use a password which is used somewhere else. MARBLE is a research tool without the bare minimum of security standards. The purpose of the profiles and the user management is to separate clients and offer some clients more features than others."
  },
  "wiki/_Footer.html": {
    "href": "wiki/_Footer.html",
    "title": "| MARBLE Wiki",
    "keywords": "(c) Furtwangen University."
  },
  "wiki/_Sidebar.html": {
    "href": "wiki/_Sidebar.html",
    "title": "| MARBLE Wiki",
    "keywords": "About MARBLE: Home Introcuding MARBLE MARBLE Background Concept A MR Approach Publications How to MARBLE Install & Setup Visual Studio Unity Getting Started Open MARBLE Creator Create A Project Fill The Project Export Project Distribute Project Run Session Clients Connect Concept & Architecture Configurations & Asset Updates System Information Creator Overview Unity & Creator Overview Unity Editor Areas Creator Window Creator Main Menu Toolbar Creator Foldouts Import Models MARBLE Projects MARBLE Project Content Navigate to MARBLE Projects Create a new project Open an existing project Project Meta Databases Select Authority Settings Select Configs Paths Edit Showcase Database Edit Showcase Models Tool Databases Pins & Details Create Pins Pin Placement Connect other Models FAQ Configs & Effects Configs List Authority & Rights User Management Profile System Runtime Control Session Management State Management Pointer Overview User Levels User Text Overlays Config Session Further Resources Further Notes Quick Fix & Workarounds"
  }
}